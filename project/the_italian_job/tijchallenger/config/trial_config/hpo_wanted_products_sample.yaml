# ARIAC 2022
# Trial for the high-priority challenge.
# order_1 will be announced when a part needed in order_1 is placed 
# on the agv in order_0.
# In this case, placing a red pump on AGV1 will announce order_1.

options:
  insert_models_over_bins: true
  belt_population_cycles: 0
  insert_models_over_stations: false
  gazebo_state_logging: true
  # mandatory: gripper_tray or gripper_part
  current_gripper_type: gripper_part
time_limit: -1


# The table_tray_infos is not mandatory
# The different options for tray_model are:
#  -movable_tray_metal_shiny
#  -movable_tray_metal_rusty
#  -movable_tray_dark_wood
#  -movable_tray_light_wood
# quantity can be: 1, 2, or 3
table_tray_infos:
  table_1: 
    tray_model: movable_tray_metal_shiny
    quantity: 2
  table_2: 
    tray_model: movable_tray_light_wood
    quantity: 1

# mandatory: location of agvs and products at start
agv_infos:
  agv1:
    location: ks1
  agv2:
    location: ks2
  agv3:
    location: ks3
  agv4:
    location: ks4


orders:
  order_0:
    priority: 1
    kitting_robot_health: 1
    assembly_robot_health: 1 
    # disable_robot: [kitting_robot, agv1, 1] # [kitting_robot, agv1, 1]
    announcement_condition: time
    announcement_condition_value: 0.0
    kitting:
      shipment_count: 1
      trays: [movable_tray_light_wood]
      agvs: [agv1]
      destinations: [as1]
      products:
        part_0:
          type: assembly_pump_red
          pose:
            xyz: [-0.1, -0.1, 0.0]
            rpy: [0.0, 0.0, 0.0]
        part_1:
          type: assembly_pump_green
          pose:
            xyz: [0.1, -0.1, 0.0]
            rpy: [0.0, 0.0, 'pi/2']
  order_1:
    priority: 3
    kitting_robot_health: 1
    assembly_robot_health: 1 
    announcement_condition: wanted_products
    announcement_condition_value: 1
    kitting:
      shipment_count: 1
      trays: [movable_tray_metal_shiny]
      agvs: [agv2]
      destinations: [as2]
      products:
        part_0:
          type: assembly_pump_red
          pose:
            xyz: [-0.1, -0.1, 0]
            rpy: [0, 0, 0]

models_over_bins:
  bin2:
     models:
       assembly_pump_red:
         xyz_start: [0.2, 0.2, 0.0]
         xyz_end: [0.4, 0.4, 0.0]
         rpy: [0, 0, 0]
         num_models_x: 2
         num_models_y: 2
  bin1:
    models:
      assembly_pump_green:
        xyz_start: [0.2, 0.2, 0.0]
        xyz_end: [0.4, 0.4, 0.0]
        rpy: [0, 0, 0]
        num_models_x: 2
        num_models_y: 2


# don't forget to include at least 1 empty line here

